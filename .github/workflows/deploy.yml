name: Auto deploy to EC2 (main branch)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Auto deploy to EC2
    runs-on: ubuntu-latest 

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1 

      - name: EC2 SSH Deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.EC2_SSH_PASSPHRASE }}
          script: |
            set -e

            echo ">>> 0. Ensuring correct ownership of the app directory..."
            sudo chown -R ubuntu:ubuntu /home/ubuntu/app

            cd /home/ubuntu/app

            git clean -fd

            echo ">>> 1. Fetching latest changes from GitHub..."
            git fetch origin

            echo ">>> 2. Resetting local main branch to match remote..."
            git reset --hard origin/main

            echo ">>> 1. Pulling latest code from GitHub..."
            git pull origin main

            echo ">>> 2. Refreshing secrets from AWS Secrets Manager..."
            SECRET_ID="app/user-management/prod"
            AWS_REGION="us-east-1"
            SECRET_JSON=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --region $AWS_REGION --query SecretString --output text)
            
            ENV_FILE="/home/ubuntu/app/infrastructure/.env.docker.temp"

            echo "$SECRET_JSON" | jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' > "$ENV_FILE"

            cd /home/ubuntu/app/infrastructure

            echo ">>> 3. Rebuilding and restarting services with Docker Compose..."
            sudo docker compose --env-file "$ENV_FILE" up --build -d

            echo ">>> 4. Pruning old Docker images..."
            sudo docker image prune -af
